#!/usr/bin/env ruby

def find_distances(levels) = levels.each_cons(2).map { _2 - _1 }
def same_direction?(distances) = distances.all?(&:positive?) || distances.all?(&:negative?)
def safe_distance?(distances) = distances.map(&:abs).all? { (1..3).include?(_1) }
def safe?(levels)
  distances = find_distances(levels)
  same_direction?(distances) && safe_distance?(distances)
end

def dampened_safe?(levels)
  return true if safe?(levels)

  (0..levels.length-1).any? do |removed_index|
    safe?(levels.slice(0, removed_index) + levels[removed_index + 1..-1])
  end
end

reports = ARGF.read.split("\n").map { _1.split.map(&:to_i) }
puts reports.select { dampened_safe?(_1) }.count
